---
apiVersion: v1
kind: ConfigMap
metadata:
  name: appd-java-agent
  namespace: appdynamics
  labels:
    app: k8s-sidecar-injector
data:
  appd-java: |
    name: appd-java
    env:
      - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
        value: <your account name>
      - name: APPDYNAMICS_AGENT_APPLICATION_NAME
        value: <your application name>
      - name: APPDYNAMICS_CONTROLLER_HOST_NAME
        value: <your controller hostname>
      - name: APPDYNAMICS_CONTROLLER_PORT
        value: "<your controller port>"
      - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
        value: "<true | false>"
      - name: APPDYNAMICS_GLOBAL_ACCOUNT_NAME
        value: <your global account name>
      - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: appd-key
            name: appd-secret
      - name: APPDYNAMICS_AGENT_TIER_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.annotations['k8s.appdynamics.com/tier-name']
      - name: APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.annotations['k8s.appdynamics.com/reuse-node-name']
      - name: APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME_PREFIX
        valueFrom:
          fieldRef:
            fieldPath: metadata.annotations['k8s.appdynamics.com/reuse-node-name-prefix']
      - name: JAVA_OPTS
        value: "-javaagent:/opt/appdynamics-java/javaagent.jar"
    volumeMounts:
      - mountPath: /opt/appdynamics-java
        name: appd-agent-repo-java
    initContainers:
      - name: appd-agent-attach
        image: docker.io/appdynamics/java-agent:20.3.0
        command:
          - cp
          - -ra
          - /opt/appdynamics/.
          - /opt/appdynamics-java
        imagePullPolicy: IfNotPresent
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext: {}
    volumes:
      - emptyDir: {}
        name: appd-agent-repo-java